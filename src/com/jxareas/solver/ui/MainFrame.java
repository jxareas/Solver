package com.jxareas.solver.ui;

import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Jon Areas, @jxareas
 */
public class MainFrame extends javax.swing.JFrame {

    int ages[] = new int[15];
    int arrayIndex = 0;

    DefaultListModel<Integer> integerListModel = new DefaultListModel<>();

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        listAges.setModel(integerListModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelTop = new javax.swing.JPanel();
        labelTopDescription = new javax.swing.JLabel();
        labelAge = new javax.swing.JLabel();
        textFieldAge = new javax.swing.JTextField();
        buttonAddAge = new javax.swing.JButton();
        labelStoredAges = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listAges = new javax.swing.JList<>();
        labelHighestAge = new javax.swing.JLabel();
        textfieldHighestAge = new javax.swing.JTextField();
        labelLowestAge = new javax.swing.JLabel();
        textfieldLowestAge = new javax.swing.JTextField();
        labelAverageAge = new javax.swing.JLabel();
        textfieldAverageAge = new javax.swing.JTextField();
        panelBottom = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.PAGE_AXIS));

        panelTop.setBackground(new java.awt.Color(255, 255, 255));

        labelTopDescription.setText("Leer 15 cantidad de edades");

        labelAge.setText("Edad");

        buttonAddAge.setBackground(new java.awt.Color(255, 255, 254));
        buttonAddAge.setText("Agregar");
        buttonAddAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddAgeActionPerformed(evt);
            }
        });

        labelStoredAges.setText("Edades Guardadas");

        jScrollPane1.setViewportView(listAges);

        labelHighestAge.setText("Edad mas alta");

        labelLowestAge.setText("Edad mas baja");

        labelAverageAge.setText("Promedio de edades");

        javax.swing.GroupLayout panelTopLayout = new javax.swing.GroupLayout(panelTop);
        panelTop.setLayout(panelTopLayout);
        panelTopLayout.setHorizontalGroup(
            panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTopLayout.createSequentialGroup()
                .addGroup(panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelTopLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelTopDescription)
                            .addGroup(panelTopLayout.createSequentialGroup()
                                .addGroup(panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(panelTopLayout.createSequentialGroup()
                                            .addGap(432, 432, 432)
                                            .addComponent(labelAverageAge)
                                            .addGap(18, 18, 18))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTopLayout.createSequentialGroup()
                                            .addComponent(labelLowestAge)
                                            .addGap(33, 33, 33)))
                                    .addGroup(panelTopLayout.createSequentialGroup()
                                        .addComponent(labelAge)
                                        .addGap(18, 18, 18)
                                        .addComponent(textFieldAge, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(buttonAddAge)
                                        .addGap(247, 247, 247)
                                        .addComponent(labelHighestAge)
                                        .addGap(33, 33, 33)))
                                .addGroup(panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textfieldHighestAge, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textfieldLowestAge, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textfieldAverageAge, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(panelTopLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(labelStoredAges)
                        .addGap(30, 30, 30)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(145, Short.MAX_VALUE))
        );
        panelTopLayout.setVerticalGroup(
            panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTopLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelTopDescription)
                .addGap(18, 18, 18)
                .addGroup(panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelAge)
                    .addComponent(textFieldAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonAddAge)
                    .addComponent(labelHighestAge)
                    .addComponent(textfieldHighestAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelStoredAges)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelTopLayout.createSequentialGroup()
                        .addGroup(panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textfieldLowestAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelLowestAge))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textfieldAverageAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelAverageAge))))
                .addContainerGap(58, Short.MAX_VALUE))
        );

        getContentPane().add(panelTop);

        javax.swing.GroupLayout panelBottomLayout = new javax.swing.GroupLayout(panelBottom);
        panelBottom.setLayout(panelBottomLayout);
        panelBottomLayout.setHorizontalGroup(
            panelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 806, Short.MAX_VALUE)
        );
        panelBottomLayout.setVerticalGroup(
            panelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 303, Short.MAX_VALUE)
        );

        getContentPane().add(panelBottom);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonAddAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddAgeActionPerformed
        int age = Integer.parseInt(textFieldAge.getText());

        try {
            ages[arrayIndex] = age;
            integerListModel.add(arrayIndex, age);
            arrayIndex++;
            updateTextFields();
        } catch (ArrayIndexOutOfBoundsException exception) {
            JOptionPane.showMessageDialog(panelTop,
                    "Solo se pueden almacenar 15 edades",
                    "Error",
                    JOptionPane.ERROR_MESSAGE
            );
        }

    }//GEN-LAST:event_buttonAddAgeActionPerformed

    private void updateTextFields() {
        setHighestAgeTextfield();
        setLowestAgeTextfield();
        setAverageAgeTextfield();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAddAge;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelAge;
    private javax.swing.JLabel labelAverageAge;
    private javax.swing.JLabel labelHighestAge;
    private javax.swing.JLabel labelLowestAge;
    private javax.swing.JLabel labelStoredAges;
    private javax.swing.JLabel labelTopDescription;
    private javax.swing.JList<Integer> listAges;
    private javax.swing.JPanel panelBottom;
    private javax.swing.JPanel panelTop;
    private javax.swing.JTextField textFieldAge;
    private javax.swing.JTextField textfieldAverageAge;
    private javax.swing.JTextField textfieldHighestAge;
    private javax.swing.JTextField textfieldLowestAge;
    // End of variables declaration//GEN-END:variables

    private void setHighestAgeTextfield() {
        // Highest Age Procedural Algorithm : For loop
        int highestAge = ages[0];
        for(int index = 0; index < ages.length; index++) {
            int currentAge = ages[index];
            if(currentAge > highestAge)
                highestAge = currentAge;
        }
        
        textfieldHighestAge.setText(String.valueOf(highestAge));
        
    }

    private void setLowestAgeTextfield() {
      // Lowest Age Procedural Algorithm: While loop
      int index = 0;
      int lowestAge = ages[0];
      
      while(index < arrayIndex) {
          int currentAge = ages[index];
          if(lowestAge > currentAge) {
              lowestAge = currentAge;
          }
          index++;    
      }
      
      textfieldLowestAge.setText(String.valueOf(lowestAge));
              
    }

    private void setAverageAgeTextfield() {
      // Average Age Procedural Algorithm: Do while loop
      int index = 0;
      double totalSum = 0;
      
      do {
          totalSum += ages[index];
          index++;
      } while(index < arrayIndex);
       double average = totalSum / arrayIndex;
       textfieldAverageAge.setText(String.valueOf(average));
      
    }

   
}
