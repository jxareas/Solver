package com.jxareas.solver.ui;

import com.jxareas.solver.model.Employee;
import com.jxareas.solver.repository.EmployeeRepository;
import com.jxareas.solver.repository.EmployeeRepositoryImpl;
import java.text.DecimalFormat;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jon Areas, @jxareas
 */
public class MainFrame extends javax.swing.JFrame {

    int ages[] = new int[15];
    int arrayIndex = 0;

    EmployeeRepository employeeRepository = new EmployeeRepositoryImpl();

    DefaultTableModel employeesTableModel;
    DefaultListModel<Integer> integerListModel = new DefaultListModel<>();

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        listAges.setModel(integerListModel);
        employeesTableModel = (DefaultTableModel) tableEmployees.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelTop = new javax.swing.JPanel();
        labelTopDescription = new javax.swing.JLabel();
        labelAge = new javax.swing.JLabel();
        textFieldAge = new javax.swing.JTextField();
        buttonAddAge = new javax.swing.JButton();
        labelStoredAges = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listAges = new javax.swing.JList<>();
        labelHighestAge = new javax.swing.JLabel();
        textfieldHighestAge = new javax.swing.JTextField();
        labelLowestAge = new javax.swing.JLabel();
        textfieldLowestAge = new javax.swing.JTextField();
        labelAverageAge = new javax.swing.JLabel();
        textfieldAverageAge = new javax.swing.JTextField();
        panelBottom = new javax.swing.JPanel();
        labelTopDescription1 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        textfieldName = new javax.swing.JTextField();
        textfieldWage = new javax.swing.JTextField();
        comboboxPosition = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableEmployees = new javax.swing.JTable();
        buttonAddEmployee = new javax.swing.JButton();
        buttonIncreaseWage = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.PAGE_AXIS));

        panelTop.setBackground(new java.awt.Color(255, 255, 255));

        labelTopDescription.setText("Leer 15 cantidad de edades");

        labelAge.setText("Edad");

        buttonAddAge.setBackground(new java.awt.Color(255, 255, 254));
        buttonAddAge.setText("Agregar");
        buttonAddAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddAgeActionPerformed(evt);
            }
        });

        labelStoredAges.setText("Edades Guardadas");

        jScrollPane1.setViewportView(listAges);

        labelHighestAge.setText("Edad mas alta");

        labelLowestAge.setText("Edad mas baja");

        labelAverageAge.setText("Promedio de edades");

        javax.swing.GroupLayout panelTopLayout = new javax.swing.GroupLayout(panelTop);
        panelTop.setLayout(panelTopLayout);
        panelTopLayout.setHorizontalGroup(
            panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTopLayout.createSequentialGroup()
                .addGroup(panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelTopLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelTopDescription)
                            .addGroup(panelTopLayout.createSequentialGroup()
                                .addGroup(panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(panelTopLayout.createSequentialGroup()
                                            .addGap(432, 432, 432)
                                            .addComponent(labelAverageAge)
                                            .addGap(18, 18, 18))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTopLayout.createSequentialGroup()
                                            .addComponent(labelLowestAge)
                                            .addGap(33, 33, 33)))
                                    .addGroup(panelTopLayout.createSequentialGroup()
                                        .addComponent(labelAge)
                                        .addGap(18, 18, 18)
                                        .addComponent(textFieldAge, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(buttonAddAge)
                                        .addGap(247, 247, 247)
                                        .addComponent(labelHighestAge)
                                        .addGap(33, 33, 33)))
                                .addGroup(panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textfieldHighestAge, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textfieldLowestAge, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textfieldAverageAge, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(panelTopLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(labelStoredAges)
                        .addGap(30, 30, 30)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(145, Short.MAX_VALUE))
        );
        panelTopLayout.setVerticalGroup(
            panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTopLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelTopDescription)
                .addGap(18, 18, 18)
                .addGroup(panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelAge)
                    .addComponent(textFieldAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonAddAge)
                    .addComponent(labelHighestAge)
                    .addComponent(textfieldHighestAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelStoredAges)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelTopLayout.createSequentialGroup()
                        .addGroup(panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textfieldLowestAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelLowestAge))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textfieldAverageAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelAverageAge))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(panelTop);

        labelTopDescription1.setText("Uso de ArrayList");

        jLabel1.setText("Nombres");

        jLabel2.setText("Cargo");

        jLabel3.setText("Salario");

        comboboxPosition.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Gerente", "Asistente", "Secretario" }));

        tableEmployees.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombres", "Cargos", "Salarios"
            }
        ));
        jScrollPane2.setViewportView(tableEmployees);

        buttonAddEmployee.setBackground(new java.awt.Color(255, 255, 254));
        buttonAddEmployee.setText("Agregar");
        buttonAddEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddEmployeeActionPerformed(evt);
            }
        });

        buttonIncreaseWage.setBackground(new java.awt.Color(255, 255, 254));
        buttonIncreaseWage.setText("Aumentar Salario");
        buttonIncreaseWage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonIncreaseWageActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelBottomLayout = new javax.swing.GroupLayout(panelBottom);
        panelBottom.setLayout(panelBottomLayout);
        panelBottomLayout.setHorizontalGroup(
            panelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBottomLayout.createSequentialGroup()
                .addGroup(panelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBottomLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(labelTopDescription1))
                    .addGroup(panelBottomLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(panelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(29, 29, 29)
                        .addGroup(panelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textfieldWage, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                            .addComponent(textfieldName)
                            .addComponent(comboboxPosition, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(panelBottomLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(buttonAddEmployee)
                        .addGap(18, 18, 18)
                        .addComponent(buttonIncreaseWage)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(89, 89, 89))
        );
        panelBottomLayout.setVerticalGroup(
            panelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBottomLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(panelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelBottomLayout.createSequentialGroup()
                        .addComponent(labelTopDescription1)
                        .addGap(23, 23, 23)
                        .addGroup(panelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(textfieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(comboboxPosition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(textfieldWage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonAddEmployee)
                            .addComponent(buttonIncreaseWage))))
                .addContainerGap(199, Short.MAX_VALUE))
        );

        getContentPane().add(panelBottom);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonAddAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddAgeActionPerformed
        int age = Integer.parseInt(textFieldAge.getText());

        try {
            ages[arrayIndex] = age;
            integerListModel.add(arrayIndex, age);
            arrayIndex++;
            updateTextFields();
        } catch (ArrayIndexOutOfBoundsException exception) {
            JOptionPane.showMessageDialog(panelTop,
                    "Solo se pueden almacenar 15 edades",
                    "Error",
                    JOptionPane.ERROR_MESSAGE
            );
        }

    }//GEN-LAST:event_buttonAddAgeActionPerformed

    private void buttonAddEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddEmployeeActionPerformed
        String fullName = textfieldName.getText();
        String jobPosition = comboboxPosition.getSelectedItem().toString();
        double wage = Double.parseDouble(textfieldWage.getText());

        Employee employee = new Employee(fullName, jobPosition, wage);
        employeeRepository.insert(employee);
        employeesTableModel.addRow(new Object[]{
            fullName, jobPosition, wage
        });

    }//GEN-LAST:event_buttonAddEmployeeActionPerformed


    private void buttonIncreaseWageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonIncreaseWageActionPerformed
        employeeRepository.increaseSalary();
        updateEmployeesTable();
    }//GEN-LAST:event_buttonIncreaseWageActionPerformed

    private void updateTextFields() {
        setHighestAgeTextfield();
        setLowestAgeTextfield();
        setAverageAgeTextfield();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAddAge;
    private javax.swing.JButton buttonAddEmployee;
    private javax.swing.JButton buttonIncreaseWage;
    private javax.swing.JComboBox<String> comboboxPosition;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelAge;
    private javax.swing.JLabel labelAverageAge;
    private javax.swing.JLabel labelHighestAge;
    private javax.swing.JLabel labelLowestAge;
    private javax.swing.JLabel labelStoredAges;
    private javax.swing.JLabel labelTopDescription;
    private javax.swing.JLabel labelTopDescription1;
    private javax.swing.JList<Integer> listAges;
    private javax.swing.JPanel panelBottom;
    private javax.swing.JPanel panelTop;
    private javax.swing.JTable tableEmployees;
    private javax.swing.JTextField textFieldAge;
    private javax.swing.JTextField textfieldAverageAge;
    private javax.swing.JTextField textfieldHighestAge;
    private javax.swing.JTextField textfieldLowestAge;
    private javax.swing.JTextField textfieldName;
    private javax.swing.JTextField textfieldWage;
    // End of variables declaration//GEN-END:variables

    private void setHighestAgeTextfield() {
        // Highest Age Procedural Algorithm : For loop
        int highestAge = ages[0];
        for (int index = 0; index < ages.length; index++) {
            int currentAge = ages[index];
            if (currentAge > highestAge) {
                highestAge = currentAge;
            }
        }

        textfieldHighestAge.setText(String.valueOf(highestAge));

    }

    private void setLowestAgeTextfield() {
        // Lowest Age Procedural Algorithm: While loop
        int index = 0;
        int lowestAge = ages[0];

        while (index < arrayIndex) {
            int currentAge = ages[index];
            if (lowestAge > currentAge) {
                lowestAge = currentAge;
            }
            index++;
        }

        textfieldLowestAge.setText(String.valueOf(lowestAge));

    }

    private void setAverageAgeTextfield() {
        // Average Age Procedural Algorithm: Do while loop
        int index = 0;
        double totalSum = 0;

        do {
            totalSum += ages[index];
            index++;
        } while (index < arrayIndex);
        double average = totalSum / arrayIndex;
        textfieldAverageAge.setText(String.valueOf(average));

    }

    private void updateEmployeesTable() {
        employeesTableModel.setRowCount(0); // Clearing all data from the table
        // Repopulating the table 
        employeeRepository.getAll()
                .stream()
                .forEach(employee
                        -> employeesTableModel.addRow(new Object[]{
            employee.getFullName(), employee.getJobPosition(), employee.getSalary()
        })
                );
    }

}
